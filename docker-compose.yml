version: '3'
services:

  stop_bang_main:
    image: stop_bang_main
    build:
      context: ./stop_bang_main
      dockerfile: Dockerfile
    container_name: main-ms
    ports:
      - '3000:3000'
    env_file: ./stop_bang_main/.env
    restart: 'always'
  
  stop_bang_register:
    image: stop_bang_register
    build:
      context: ./stop_bang_register
      dockerfile: Dockerfile
    container_name: register-ms
    env_file: ./stop_bang_register/.env
    restart: 'always'

  stop_bang_login_logout:
    image: stop_bang_login_logout
    build:
      context: ./stop_bang_login_logout
      dockerfile: Dockerfile
    container_name: login-logout-ms
    env_file: ./stop_bang_login_logout/.env
    restart: 'always'

  stop_bang_mypage:
    image: stop_bang_mypage
    build:
      context: ./stop_bang_mypage
      dockerfile: Dockerfile
    container_name: mypage-ms
    env_file: ./stop_bang_mypage/.env
    restart: 'always'
    
  stop_bang_bookmark:
    image: stop_bang_bookmark
    build:
      context: ./stop_bang_bookmark
      dockerfile: Dockerfile
    container_name: bookmark-ms
    env_file: ./stop_bang_bookmark/.env
    restart: 'always'

  stop_bang_map:
    image: stop_bang_map
    build:
      context: ./stop_bang_map
      dockerfile: Dockerfile
    container_name: map-ms
    env_file: ./stop_bang_map/.env
    restart: 'always'

  stop_bang_review:
    image: stop_bang_review
    build:
      context: ./stop_bang_review
      dockerfile: Dockerfile
    container_name: review-ms
    env_file: ./stop_bang_review/.env
    restart: 'always'
    depends_on:
      - 'rabbit'
    
# 간접메시징을 위한 RabbitMQ 서버
  rabbit:
    image: rabbitmq:3.8.5-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    restart: always
    
# DB 관련 마이크로서비스
  stop_bang_sub_DB:
    image: stop_bang_sub_db
    build:
      context: ./stop_bang_sub_DB
      dockerfile: Dockerfile
    container_name: sub-api
    env_file: ./stop_bang_sub_DB/.env
    restart: 'always'
    depends_on:
      - 'sub_db'
      - 'rabbit'

  stop_bang_auth_DB:
    image: stop_bang_auth_db
    build:
      context: ./stop_bang_auth_DB
      dockerfile: Dockerfile
    container_name: auth-api
    env_file: ./stop_bang_auth_DB/.env
    restart: always
    depends_on:
      - 'auth_db'

  stop_bang_review_DB:
    image: stop_bang_review_db
    build:
      context: ./stop_bang_review_DB
      dockerfile: Dockerfile
    container_name: review-api
    env_file: ./stop_bang_review_DB/.env
    restart: always
    depends_on:
      - 'review_db'

  auth_db:
    image: mysql
    container_name: auth-db
    env_file: ./.env_auth_db
    restart: 'always'

  sub_db:
    image: mysql
    container_name: sub-db
    env_file: ./.env_auth_db
    restart: 'always'

  review_db:
    image: mysql
    container_name: review-db
    env_file: ./.env_auth_db
    restart: 'always'